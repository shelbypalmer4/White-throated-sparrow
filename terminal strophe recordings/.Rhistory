str(a)
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/terminal strophe recordings")
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="use"){
png(filename = paste("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/try/", adjust$file.name[i], ".png"))
try(timer(b,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold = adjust$new_threshold[i],
main=adjust$file.name[i]))
dev.off()
}
}
?paste
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/terminal strophe recordings")
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="use"){
png(filename = paste("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/try/", adjust$file.name[i], ".png", sep = ""))
try(timer(b,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold = adjust$new_threshold[i],
main=adjust$file.name[i]))
dev.off()
}
}
length(list.files())
gewtd()
getwd()
use_works <- c()
?append
?strplit
??strsplit
strsplit(list.files[1], split = ".png")
list.files[1]
list.files()[1]
strsplit(list.files()[1], split = ".png")
getwd()
use_works <- c()
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/try/")
unlist(strsplit(list.files()[1], split = ".png"))
use_works <- c()
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/try/")
for(i in 1:length(list.files())){
append(use_works, unlist(strsplit(list.files()[i], split = ".png")))
}
head(use_works)
class(use_works)
class(use_works) <- "character"
class(use_works)
use_works <- as.character(c())
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/try/")
for(i in 1:length(list.files())){
append(use_works, unlist(strsplit(list.files()[i], split = ".png")))
}
head(use_works)
append(use_works, unlist(strsplit(list.files()[1], split = ".png")))
use_works <- as.character(c())
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/try/")
for(i in 1:length(list.files())){
use_works <- append(use_works, unlist(strsplit(list.files()[i], split = ".png")))
}
head(use_works)
head(adjust)
for (i in 1:length(use_works)){
use_works[i] %in% adjust$file.name[which(adjust$threshold_25 == "use")]
}
failures <- c()
for (i in 1:length(use_works)){
failures[i] <- !use_works[i] %in% adjust$file.name[which(adjust$threshold_25 == "use")]
}
failures
length(adjust$file.name[which(adjust$threshold_25 == "use")])
failures <- c()
for (i in 1:length(adjust$file.name[which(adjust$threshold_25 == "use")])){
failures[i] <- !adjust$file.name[which(adjust$threshold_25 == "use")] %in% use_works[i]
}
warnings()
failures <- c()
for (i in 1:length(adjust$file.name[which(adjust$threshold_25 == "use")])){
failures[i] <- !adjust$file.name[which(adjust$threshold_25 == "use")][i] %in% use_works
}
failures
adjust$file.name[which(isTRUE(failures))]
adjust$file.name[which(adjust$threshold_25 == "use")][which(isTRUE(failures))]
adjust$file.name[which(adjust$threshold_25 == "use")]
use_candidates <- adjust$file.name[which(adjust$threshold_25 == "use")]
use_candidates[which(isTRUE(failures))]
length(failures)
length(use_candidates)
isTRUE(failures[1])
use_candidates[which(failures == TRUE)]
losers <- use_candidates[which(failures == TRUE)]
dev.off()
for (i in 1:length(adjust$file.name[which(adjust$threshold_25 == "use")])){
failures[i] <- !adjust$file.name[which(adjust$threshold_25 == "use")][i] %in% use_works
}
getwd()
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow")
adjust<-read.csv("WTSP_params_20dec22.csv")
table(adjust$threshold_25)
View(adjust)
adjust<-read.csv("WTSP_params_20dec22.csv")
adjust<-read.csv("WTSP_params_20dec22.csv")
adjust<-read.csv("WTSP_params_20dec22.csv")
adjust<-read.csv("WTSP_params_20dec22.csv")
table(adjust$threshold_25)
table(adjust$threshold_25)
getwd()
adjust<-read.csv("WTSP_params_20dec22.csv")
table(adjust$threshold_25)
# cutting and looking at them
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="trim"){
b1<-cutw(b,
from=adjust$trim_before[i],
to=adjust$trim_after[i],
output="Wave")
timer(b1,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold=30,
main=adjust$file.name[i])
}
}
#### USE (change threshold) ####
# adjusting the thresholds and looking at amplitude envelopes
#setwd("C:/Users/Shelby Palmer/Desktop/The House Always Wins/White-Throated-Sparrow/terminal strophe recordings")
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/terminal strophe recordings")
# cutting and looking at them
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="trim"){
b1<-cutw(b,
from=adjust$trim_before[i],
to=adjust$trim_after[i],
output="Wave")
timer(b1,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold=30,
main=adjust$file.name[i])
}
}
getwd()
# cutting and looking at them
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="trim"){
b1<-cutw(b,
from=adjust$trim_before[i],
to=adjust$trim_after[i],
output="Wave")
timer(b1,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold=25,
main=adjust$file.name[i])
}
}
###<<<<<<< Updated upstream
# seeing if our use/trim cases work (20 Dec. 2022)
#setwd("C:/Users/Shelby Palmer/Desktop/The House Always Wins/White-Throated-Sparrow")
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow")
adjust<-read.csv("WTSP_params_16feb23.csv")
# cutting and looking at them
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="trim"){
b1<-cutw(b,
from=adjust$trim_before[i],
to=adjust$trim_after[i],
output="Wave")
timer(b1,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold=25,
main=adjust$file.name[i])
}
}
#### USE (change threshold) ####
# adjusting the thresholds and looking at amplitude envelopes
#setwd("C:/Users/Shelby Palmer/Desktop/The House Always Wins/White-Throated-Sparrow/terminal strophe recordings")
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/terminal strophe recordings")
# cutting and looking at them
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="trim"){
b1<-cutw(b,
from=adjust$trim_before[i],
to=adjust$trim_after[i],
output="Wave")
timer(b1,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold=25,
main=adjust$file.name[i])
}
}
Dec<-read.csv("WTSP_params_20dec22")
Dec<-read.csv("WTSP_params_20dec22.csv")
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow")
Dec<-read.csv("WTSP_params_20dec22.csv")
Feb<-read.csv("WTSP_params_16feb23.csv")
dim(Dec)
dim(Feb)
Dec$threshold_25 == Feb$threshold_25
dim(Feb)
sum(Dec$threshold_25 == Feb$threshold_25)
sum(Dec$new_threshold == Feb$new_threshold)
Dec$new_threshold == Feb$new_threshold
Dec$trim_before == Feb$trim_before
sum(Dec$trim_before == Feb$trim_before)
sum(Dec$trim_after == Feb$trim_after)
adjust<-read.csv("WTSP_params_16feb23.csv")
adjust<-read.csv("WTSP_params_16feb23.csv")
# cutting and looking at them
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="trim"){
b1<-cutw(b,
from=adjust$trim_before[i],
to=adjust$trim_after[i],
output="Wave")
timer(b1,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold=25,
main=adjust$file.name[i])
}
}
#### USE (change threshold) ####
# adjusting the thresholds and looking at amplitude envelopes
#setwd("C:/Users/Shelby Palmer/Desktop/The House Always Wins/White-Throated-Sparrow/terminal strophe recordings")
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/terminal strophe recordings")
# cutting and looking at them
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="trim"){
b1<-cutw(b,
from=adjust$trim_before[i],
to=adjust$trim_after[i],
output="Wave")
timer(b1,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold=25,
main=adjust$file.name[i])
}
}
adjust<-read.csv("WTSP_params_16feb23.csv")
###<<<<<<< Updated upstream
# seeing if our use/trim cases work (20 Dec. 2022)
#setwd("C:/Users/Shelby Palmer/Desktop/The House Always Wins/White-Throated-Sparrow")
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow")
adjust<-read.csv("WTSP_params_16feb23.csv")
#### USE (change threshold) ####
# adjusting the thresholds and looking at amplitude envelopes
#setwd("C:/Users/Shelby Palmer/Desktop/The House Always Wins/White-Throated-Sparrow/terminal strophe recordings")
setwd("/Users/mcentee_lab_2/Documents/GitHub/White-throated-sparrow/terminal strophe recordings")
# cutting and looking at them
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="trim"){
b1<-cutw(b,
from=adjust$trim_before[i],
to=adjust$trim_after[i],
output="Wave")
timer(b1,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold=25,
main=adjust$file.name[i])
}
}
# use/trim
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(remix$threshold_25[i]=="use/trim"){
b1<-cutw(b,
from=remix$trim_before[i],
to=remix$trim_after[i],
output="Wave")
timer(b1,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold=as.numeric(remix$new_threshold[i]),
main=remix$file.name[i])
}
}
# use/trim
for (i in 1:length(adjust$file.name)) {
a<-readWave(adjust$file.name[i])
# if sampling rate is not 48000, resample to 48000
if (a@samp.rate!=48000) {
a<-resamp(a,
g=48000,
output="Wave")
}
a1<-fir(a,
from=2000,
to=6000,
bandpass=T,
output="Wave") # initial filter
b<-fir(a1,
from=(mean(dfreq(a1, plot=F)[,2])*1000)-500,
to=(mean(dfreq(a1, plot=F)[,2])*1000)+500,
bandpass=T,
output="Wave")
if(adjust$threshold_25[i]=="use/trim"){
b1<-cutw(b,
from=adjust$trim_before[i],
to=adjust$trim_after[i],
output="Wave")
timer(b1,
dmin = 0.02,
envt = "hil",
msmooth=c(512, 90),
threshold=as.numeric(adjust$new_threshold[i]),
main=adjust$file.name[i])
}
}
